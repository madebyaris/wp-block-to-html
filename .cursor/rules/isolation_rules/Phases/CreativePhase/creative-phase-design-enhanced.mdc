---
description: Enhanced creative phase design rules for advanced UI/UX design mode
globs: "**/design*/**", "**/ui*/**", "**/ux*/**", "**/component*/**"
alwaysApply: false
---

# ENHANCED CREATIVE PHASE: ADVANCED DESIGN MODE RULES

> **TL;DR:** This document provides advanced rules for design-focused creative phases, ensuring structured UI/UX design decisions, atomic design methodology, advanced responsive design, design system integration, and comprehensive accessibility compliance.

## üé® ENHANCED DESIGN MODE ACTIVATION CRITERIA

### When to Use Enhanced Design Mode
- Advanced UI/UX component design required
- Design system creation or major updates needed
- Complex dashboard or data visualization design
- Multi-platform responsive design implementation
- Component library development or enhancement
- Advanced accessibility compliance required
- Performance-optimized design decisions needed
- User research integration into design process

### Enhanced Design Mode Prerequisites
```markdown
‚úÖ ENHANCED DESIGN MODE PREREQUISITES
‚ñ° Memory Bank structure verified and analyzed
‚ñ° Design system audit completed
‚ñ° Platform detection with device matrix completed
‚ñ° User research data available or accessible
‚ñ° Performance requirements documented
‚ñ° Accessibility standards defined (WCAG AAA target)
‚ñ° Component library analysis completed
‚ñ° Design token system evaluated
‚ñ° Target devices/platforms with specifications identified
‚ñ° Brand guidelines and style guide available
```

## üèóÔ∏è ENHANCED DESIGN WORKFLOW ENFORCEMENT

### Mandatory Enhanced Design Process
```mermaid
graph TD
    Start["üé® ENHANCED DESIGN MODE START"] --> AdvancedValidation["üîç ADVANCED STRUCTURE VALIDATION"]
    AdvancedValidation --> DesignSystemAudit["üé® DESIGN SYSTEM AUDIT<br>Tokens, components, patterns"]
    DesignSystemAudit --> UserResearchIntegration["üë• USER RESEARCH INTEGRATION<br>Personas, journeys, accessibility"]
    UserResearchIntegration --> AdvancedPlatformDetection["üîç ADVANCED PLATFORM DETECTION<br>Device matrix, performance targets"]
    
    AdvancedPlatformDetection --> AtomicDesignSetup["‚öõÔ∏è ATOMIC DESIGN SETUP<br>Component hierarchy planning"]
    AtomicDesignSetup --> ContextOptimization["‚ö° ENHANCED CONTEXT OPTIMIZATION<br>Atomic component isolation"]
    
    ContextOptimization --> DesignSpecialization{"üéØ DESIGN SPECIALIZATION"}
    DesignSpecialization -->|"Design System"| DesignSystemCreation["üé® DESIGN SYSTEM CREATION"]
    DesignSpecialization -->|"Component Library"| ComponentLibraryDesign["üß© COMPONENT LIBRARY DESIGN"]
    DesignSpecialization -->|"Advanced Dashboard"| AdvancedDashboardDesign["üìä ADVANCED DASHBOARD DESIGN"]
    DesignSpecialization -->|"Mobile App"| MobileAppDesign["üì± MOBILE APP DESIGN"]
    DesignSpecialization -->|"Web Application"| WebApplicationDesign["üåê WEB APPLICATION DESIGN"]
    DesignSpecialization -->|"UX Design"| UXDesignProcess["üîÑ UX DESIGN PROCESS"]
    
    %% All paths lead to validation
    DesignSystemCreation --> AdvancedValidationPhase["üîç ADVANCED VALIDATION PHASE"]
    ComponentLibraryDesign --> AdvancedValidationPhase
    AdvancedDashboardDesign --> AdvancedValidationPhase
    MobileAppDesign --> AdvancedValidationPhase
    WebApplicationDesign --> AdvancedValidationPhase
    UXDesignProcess --> AdvancedValidationPhase
    
    AdvancedValidationPhase --> ResponsiveValidation["üì± ADVANCED RESPONSIVE VALIDATION"]
    ResponsiveValidation --> AccessibilityValidation["‚ôø ENHANCED ACCESSIBILITY VALIDATION"]
    AccessibilityValidation --> PerformanceValidation["‚ö° PERFORMANCE VALIDATION"]
    PerformanceValidation --> PrototypingPhase["üé≠ PROTOTYPING & TESTING PHASE"]
    PrototypingPhase --> ImplementationPreparation["üöÄ IMPLEMENTATION PREPARATION"]
    ImplementationPreparation --> EnhancedComplete["‚úÖ ENHANCED DESIGN COMPLETE"]
    
    style Start fill:#e91e63,stroke:#ad1457,color:white
    style AdvancedValidation fill:#ff5722,stroke:#d84315,color:white
    style DesignSystemAudit fill:#9c27b0,stroke:#6a1b99,color:white
    style UserResearchIntegration fill:#2196f3,stroke:#1565c0,color:white
    style AtomicDesignSetup fill:#4caf50,stroke:#2e7d32,color:white
    style AdvancedValidationPhase fill:#ff9800,stroke:#ef6c00,color:white
    style PrototypingPhase fill:#795548,stroke:#5d4037,color:white
    style EnhancedComplete fill:#4caf50,stroke:#2e7d32,color:white
```

## üîç ADVANCED PLATFORM-AWARE DESIGN RULES

### Enhanced Automatic Platform Detection
Before any design work, the system MUST:
1. Detect project platform with advanced device matrix analysis
2. Analyze existing design system and component library
3. Load appropriate responsive strategy with performance considerations
4. Apply platform-specific design guidelines with accessibility enhancements
5. Set correct touch targets, breakpoints, and interaction patterns
6. Evaluate performance implications of design decisions

### Enhanced Platform-Specific Design Requirements

#### üåê Advanced Web Projects
```markdown
‚úÖ ADVANCED WEB DESIGN REQUIREMENTS
‚ñ° Progressive enhancement from 320px mobile-first approach
‚ñ° Advanced breakpoint system (320px, 480px, 640px, 768px, 1024px, 1280px, 1440px, 1920px)
‚ñ° Touch targets minimum 44px with 8px spacing buffer
‚ñ° Advanced CSS Grid/Flexbox with container queries support
‚ñ° Progressive Web App design considerations (offline, installability)
‚ñ° Performance-optimized responsive images (WebP/AVIF, lazy loading)
‚ñ° Advanced accessibility compliance (WCAG AAA target)
‚ñ° Cross-browser compatibility with graceful degradation
‚ñ° Advanced typography with fluid scaling and variable fonts
‚ñ° Component-based design system integration
‚ñ° Build optimization considerations (critical CSS, resource hints)
```

#### üì± Advanced Mobile App Projects
```markdown
‚úÖ ADVANCED MOBILE APP DESIGN REQUIREMENTS
‚ñ° Platform-specific touch targets (44pt iOS / 48dp Android) with enhanced spacing
‚ñ° Advanced safe area handling for all device types (notched, foldable, etc.)
‚ñ° Platform design guidelines with modern enhancements (iOS 17, Material Design 3)
‚ñ° Advanced orientation change handling with state preservation
‚ñ° Platform-specific navigation patterns with accessibility enhancements
‚ñ° Advanced accessibility features (VoiceOver/TalkBack, Switch Control, Voice Control)
‚ñ° Performance optimization for device capabilities and battery life
‚ñ° Foldable device support and multi-window scenarios
‚ñ° Dark mode and dynamic theming support
‚ñ° Haptic feedback integration (iOS) and material motion (Android)
‚ñ° Edge-to-edge design with proper system insets
```

#### üîÑ Enhanced Cross-Platform Projects
```markdown
‚úÖ ENHANCED CROSS-PLATFORM DESIGN REQUIREMENTS
‚ñ° Shared design system with platform-specific component variants
‚ñ° Universal design principles with platform-appropriate adaptations
‚ñ° Consistent user experience with platform-native feel
‚ñ° Performance optimization across different hardware capabilities
‚ñ° Advanced accessibility patterns that work across all platforms
‚ñ° Responsive design that adapts to platform conventions
‚ñ° Design token system that supports platform theming
‚ñ° Component API design that abstracts platform differences
```

## ‚öõÔ∏è ATOMIC DESIGN METHODOLOGY ENFORCEMENT

### Atomic Design Component Hierarchy
Design work MUST follow atomic design principles:

1. **Atoms (Design Tokens & Basic Elements)**
   - Color tokens, typography tokens, spacing tokens
   - Basic UI elements: buttons, inputs, icons, labels
   - Focus: Individual design decisions and basic styling

2. **Molecules (Simple Component Groups)**
   - Search bars, form fields, card headers, navigation items
   - Combination of atoms into functional units
   - Focus: Component composition and basic interactions

3. **Organisms (Complex Component Sections)**
   - Headers, forms, data tables, navigation systems
   - Complex UI sections with multiple molecules
   - Focus: Layout patterns and advanced interactions

4. **Templates (Page-Level Structures)**
   - Page layouts, modal structures, dashboard grids
   - Wireframe-level page organization
   - Focus: Information architecture and responsive layout

5. **Pages (Complete User Interfaces)**
   - Login pages, dashboard views, settings screens
   - Complete user interfaces with real content
   - Focus: User experience and content strategy

### Atomic Design Context Management
```markdown
üîÑ ATOMIC DESIGN CONTEXT PROTOCOL
1. Start with design token definition and validation
2. Build atoms systematically with design system integration
3. Compose molecules with accessibility and interaction design
4. Construct organisms with responsive behavior and performance
5. Create templates with advanced layout and navigation patterns
6. Implement pages with user research integration and testing
7. Validate entire atomic hierarchy for consistency and performance
```

## üìã ENHANCED DESIGN DOCUMENTATION REQUIREMENTS

### Mandatory Enhanced Documentation Elements
Every design component MUST include comprehensive documentation:

```markdown
# Enhanced Component: [Name] ([Atomic Level])

## üéØ Purpose & User Value
[What this component does, why it exists, and user value proposition]

## üë• User Research Integration
- **Target Users**: [Primary user personas and their needs]
- **Use Cases**: [Primary and secondary use cases with user stories]
- **User Journey**: [Where this component fits in overall user journey]
- **Accessibility Needs**: [Specific accessibility requirements for target users]

## üß© Atomic Design Classification
- **Atomic Level**: [Atom/Molecule/Organism/Template/Page]
- **Dependencies**: [Required atoms/molecules with version compatibility]
- **Composition**: [How this component is built from smaller atomic parts]
- **Variants**: [All component variants and their use cases]

## üé® Enhanced Visual Specifications
- **Design Tokens**: [Specific token references from design system]
- **Typography**: [Font tokens, scale, hierarchy, accessibility considerations]
- **Spacing**: [Spacing tokens, rhythm, proportions, touch target compliance]
- **Colors**: [Color tokens, contrast ratios, dark mode variants]
- **Shadows & Elevation**: [Elevation tokens, depth hierarchy]
- **Borders & Radius**: [Border tokens, radius system, visual consistency]

## üì± Advanced Responsive Behavior
### Breakpoint-Specific Adaptations
- **Mobile (320px - 640px)**: [Touch-first adaptations, single-column layouts]
- **Small Mobile (480px - 640px)**: [Improved touch targets, better spacing]
- **Tablet (640px - 1024px)**: [Hybrid interaction, flexible grids, orientation handling]
- **Desktop (1024px - 1440px)**: [Multi-column layouts, hover states, keyboard navigation]
- **Large Desktop (1440px+)**: [Optimized for large screens, max-width constraints]

### Platform-Specific Responsive Behavior
- **Web**: [Progressive enhancement, performance optimization, PWA considerations]
- **iOS**: [Safe area handling, Dynamic Type, multitasking support]
- **Android**: [Multiple densities, foldable support, edge-to-edge design]
- **Cross-Platform**: [Shared patterns with platform-specific adaptations]

## üé≠ Advanced Interaction Design
- **Micro-Interactions**: [Hover, focus, active states with timing and easing]
- **Animations**: [Entry/exit animations, state transitions, performance considerations]
- **Gestures**: [Touch gestures, keyboard shortcuts, voice commands]
- **Feedback**: [Visual, haptic, and audio feedback patterns]
- **Loading States**: [Skeleton screens, progressive loading, error recovery]

## ‚ôø Enhanced Accessibility Requirements
- **WCAG AAA Compliance**: [Specific compliance measures and testing results]
- **ARIA Implementation**: [Required ARIA attributes, roles, and properties]
- **Keyboard Navigation**: [Tab order, keyboard shortcuts, focus management]
- **Screen Reader Support**: [Screen reader announcements and behavior]
- **Color Contrast**: [Contrast ratios for all states and variants]
- **Motion Sensitivity**: [Reduced motion alternatives and preferences]
- **Cognitive Accessibility**: [Clear language, simple interactions, error prevention]

## ‚ö° Performance Considerations
- **Bundle Size Impact**: [Component size and optimization strategies]
- **Rendering Performance**: [Rendering optimization and virtual scrolling]
- **Memory Usage**: [Memory efficiency and cleanup strategies]
- **Network Impact**: [Asset loading, lazy loading, and caching strategies]
- **Battery Impact**: [Power efficiency considerations for mobile devices]

## üîß Enhanced Component API
[Comprehensive TypeScript interface with all props, events, and methods]

## üß™ Comprehensive Usage Examples
[Multiple usage examples covering all variants, states, and platforms]

## ‚úÖ Enhanced Design Validation
‚ñ° Meets all functional requirements with edge case handling
‚ñ° Follows atomic design principles and design system integration
‚ñ° Responsive across all breakpoints and platforms
‚ñ° WCAG AAA accessibility compliance verified
‚ñ° Performance optimized for all target devices
‚ñ° User research validation completed
‚ñ° Cross-platform compatibility confirmed
‚ñ° Design system consistency maintained
```

## üö® ENHANCED DESIGN VALIDATION CHECKPOINTS

### Pre-Design Enhanced Validation
```bash
# MANDATORY: Run before starting enhanced design work
1. Verify Memory Bank structure and design system integration
2. Complete advanced platform detection with device matrix
3. Load and analyze existing design system and component library
4. Validate user research data and accessibility requirements
5. Ensure performance targets and constraints are defined
6. Confirm atomic design methodology setup
7. Validate design token system and component dependencies
```

### Mid-Design Enhanced Validation
```bash
# MANDATORY: Run during enhanced design process
1. Validate component against design system and atomic design principles
2. Check responsive behavior across all breakpoints and platforms
3. Verify WCAG AAA accessibility requirements and testing
4. Test interaction states, animations, and micro-interactions
5. Validate performance implications and optimization strategies
6. Document design decisions with user research justification
7. Ensure cross-platform compatibility and platform-specific adaptations
```

### Post-Design Enhanced Validation
```bash
# MANDATORY: Run before completing enhanced design
1. Final responsive validation across all platforms and devices
2. Comprehensive accessibility audit with assistive technology testing
3. Design system compliance verification and token usage validation
4. Performance impact assessment and optimization verification
5. User research validation and usability testing completion
6. Implementation readiness check with developer specifications
7. Documentation completeness review and API validation
8. Cross-platform compatibility final verification
```

## üîÑ ENHANCED INTEGRATION WITH OTHER MODES

### Enhanced Transition to IMPLEMENT Mode
Enhanced design mode completion triggers comprehensive handoff:
```markdown
‚úÖ ENHANCED DESIGN COMPLETE CHECKLIST
‚ñ° All components documented with atomic design classification
‚ñ° Design system integration and token usage documented
‚ñ° Advanced responsive behavior defined for all platforms
‚ñ° WCAG AAA accessibility requirements documented and tested
‚ñ° Performance optimization guidelines and constraints defined
‚ñ° User research validation and usability testing completed
‚ñ° Style guide updated with new patterns and components
‚ñ° Implementation notes with technical specifications provided
‚ñ° Asset requirements identified with optimization strategies
‚ñ° Dependencies and libraries specified with version requirements
‚ñ° Build sequence planned with performance considerations
‚ñ° Cross-platform compatibility verified and documented

üöÄ READY FOR ENHANCED IMPLEMENT MODE
```

### Enhanced Integration with PLAN Mode
Enhanced design decisions inform advanced implementation planning:
- Atomic design component complexity affects development time estimates
- Design system integration choices influence technology stack decisions
- Advanced responsive requirements impact development approach and testing
- Performance optimization needs affect implementation strategy and tooling
- Accessibility requirements influence development practices and validation
- User research insights guide feature prioritization and development focus

## üéØ ENHANCED DESIGN EXCELLENCE CRITERIA

### Advanced Creative Excellence Standards
```markdown
‚úÖ ENHANCED DESIGN EXCELLENCE CHECKLIST
‚ñ° User-centered design approach with research validation applied
‚ñ° Multiple design options explored and evaluated systematically
‚ñ° Design system consistency maintained and enhanced
‚ñ° Innovation balanced with usability and accessibility
‚ñ° Platform-specific patterns respected and enhanced
‚ñ° Performance implications considered and optimized
‚ñ° WCAG AAA accessibility integrated from the start
‚ñ° Scalability and maintainability planned for long-term evolution
‚ñ° Atomic design methodology implemented systematically
‚ñ° Cross-platform compatibility ensured with platform-specific enhancements
‚ñ° User research insights integrated throughout design process
‚ñ° Advanced interaction design with micro-interactions and animations
```

### Enhanced Quality Assurance Integration
Enhanced design mode integrates with comprehensive QA validation:
- Automated responsive testing across device matrix
- Advanced accessibility compliance verification with assistive technology
- Design system adherence checking with automated tools
- Cross-platform compatibility validation with real device testing
- Performance impact assessment with optimization verification
- User research validation with usability testing and feedback integration

## üö® ENHANCED ERROR HANDLING & RECOVERY

### Advanced Design Mode Error Prevention
```markdown
üõ°Ô∏è ENHANCED ERROR PREVENTION STRATEGIES
‚ñ° Design system integration validation before component creation
‚ñ° Atomic design dependency checking and version compatibility
‚ñ° Platform detection verification with fallback strategies
‚ñ° Performance impact assessment with optimization requirements
‚ñ° Accessibility compliance checking with automated and manual testing
‚ñ° User research validation with feedback integration loops
‚ñ° Cross-platform compatibility verification with device testing
‚ñ° Implementation readiness validation with developer feedback
```

### Enhanced Recovery Protocols
```markdown
üîß ENHANCED ERROR RECOVERY PROTOCOLS
‚ñ° Design system conflicts: Automated resolution with design token validation
‚ñ° Platform detection failures: Manual specification with universal fallbacks
‚ñ° Performance issues: Optimization strategies with alternative approaches
‚ñ° Accessibility failures: Remediation guidelines with testing protocols
‚ñ° User research gaps: Research integration strategies with validation methods
‚ñ° Cross-platform issues: Platform-specific adaptation with shared patterns
‚ñ° Implementation blockers: Alternative approaches with technical consultation
```

---

**Remember**: Enhanced design mode creates excellent, platform-aware, accessible, and performance-optimized designs that integrate seamlessly with design systems and are ready for advanced implementation. Every design decision should be documented, validated, and aligned with user research and business goals.